// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
  recipes       Recipe[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  recipes   Recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipe {
  id           String   @id @default(cuid())
  title        String
  slug         String   @unique
  description  String?
  content      String   // HTML content from WYSIWYG editor
  ingredients  String   // JSON string of ingredients
  instructions String   // JSON string of cooking instructions
  prepTime     Int?     // in minutes
  cookTime     Int?     // in minutes
  servings     Int?
  difficulty   String?  // easy, medium, hard
  mainImage    String?  // URL to main recipe image
  published    Boolean  @default(false)
  featured     Boolean  @default(false)
  categoryId   String
  authorId     String
  category     Category @relation(fields: [categoryId], references: [id])
  author       User     @relation(fields: [authorId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}